name: Test and Deploy

on:
  # Run this workflow every time a PR is opened or a new commit is pushed to the PR
  pull_request:
  # Run this workflow every time a PR is merged to main or a release tag is added
  push:
    branches:
      - master
    tags:
      - '*'

env:
  MAIN_PYVER: 3.8

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a
          conda install -q conda-build
          conda -n numba-scipy -c numba python==${{ env.MAIN_PYVER }} numba>=0.45 scipy>=0.16 flake8 pytest
          conda activate numba-scipy
          pip install -e .
      - name: Lint with flak8e
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate numba-scipy
          flake8 numba-scipy
      - name: Pytest
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate numba-scipy
          bash .buildscripts/incremental/test.sh
      ##- name: Coveralls
      ##  env:
      ##    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ##  run: |
      ##    source "$CONDA/etc/profile.d/conda.sh"
      ##    conda activate mg
      ##    conda install -c conda-forge coveralls
      ##    coveralls --service=github
      - name: Conda Build
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda build -c defaults -c numba --python ${{ env.MAIN_PYVER }} buildscripts/conda_recipes/numba-scipy/
          # This doesn't rebuild, but simply computes the name of the file that was previously built
          OUTPUT=$(conda build --output -c defaults -c numba --python ${{ env.MAIN_PYVER }} buildscripts/conda_recipes/numba-scipy/)
          echo "Path to built package:"
          echo $OUTPUT
          echo "CONDA_BUILD_OUTPUT=$OUTPUT" >> $GITHUB_ENV
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: built_package
          path: ${{ env.CONDA_BUILD_OUTPUT }}
          retention-days: 7

  test_pyver:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        pyver:
          - 3.6
          - 3.7
          - 3.8
          - 3.9
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: built_package
          path: ./artifact_storage
      - name: Setup conda env
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda create -n numba-scipy -c numba python==${{ matrix.pyver }} numba>=0.45 scipy>=0.16 flake8 pytest
          conda activate numba_scipy
          # Install built_package
          BUILT_PKG=$(ls ./artifact_storage | head -1)
          conda install ./artifact_storage/$BUILT_PKG
          # Install dependencies listed in built package
          # (This is a workaround because conda does not install dependencies for local file installs)
          conda update -c defaults -c conda-forge numba-scipy
          conda list
      - name: Pytest
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda activate numba_scipy

  dev_deploy:
    runs-on: ubuntu-latest
    needs: test_pyver
    if: (github.ref == 'refs/heads/main') || contains(github.ref, 'refs/tags/')
    env:
      AC_LABEL: dev
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v2
        with:
          name: built_package
          path: ./artifact_storage
      - name: Determine label
        if: contains(github.ref, 'refs/tags/')
        run: |
          echo "AC_LABEL=numba/label/dev" >> $GITHUB_ENV
      - name: Deploy to Anaconda Cloud
        run: |
          source "$CONDA/etc/profile.d/conda.sh"
          conda config --set always_yes yes --set changeps1 no
          conda install -q anaconda-client
          ls -la ./artifact_storage
          UPLOAD=$(ls ./artifact_storage | head -1)
          echo "Uploading $UPLOAD with label=${{ env.AC_LABEL }}"
          $CONDA/bin/anaconda -t ${{ secrets.ANACONDA_ORG_TOKEN }} upload -u numba -l ${{ env.AC_LABEL }} --no-progress --force --no-register ./artifact_storage/$UPLOAD
